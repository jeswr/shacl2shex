@prefix dash: <http://datashapes.org/dash#> .
@prefix ex: <http://datashapes.org/sh/tests/core/property/minListLength-001.test#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix sht: <http://www.w3.org/ns/shacl-test#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

ex:PersonShape
  rdf:type sh:NodeShape ;
  sh:targetClass ex:Person ;
  sh:property ex:PersonShape-skills ;
.

ex:PersonShape-skills
  rdf:type sh:PropertyShape ;
  sh:path ex:skills ;
  sh:minListLength 1 ;
.

# Satisfies all constraints
ex:person1
  rdf:type ex:Person ;
  ex:skills ( "programming" "design" ) ;
.

# Violates minListLength constraint
ex:person2
  rdf:type ex:Person ;
  ex:skills rdf:nil ;
.

ex:person3
  rdf:type ex:Person ;
  ex:skills ex:notAList ;
.

<>
  rdf:type mf:Manifest ;
  mf:entries (
      <minListLength-001>
    ) ;
.

<minListLength-001>
  rdf:type sht:Validate ;
  rdfs:label "Test of sh:minListLength on property shape 001" ;
  mf:action [
      sht:dataGraph <> ;
      sht:shapesGraph <> ;
    ] ;
  mf:result [
      rdf:type sh:ValidationReport ;
      sh:conforms "false"^^xsd:boolean ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:person2 ;
          sh:resultPath ex:skills ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:MinListLengthConstraintComponent ;
          sh:sourceShape ex:PersonShape-skills ;
          sh:value rdf:nil ;
        ] ;
      sh:result [
          rdf:type sh:ValidationResult ;
          sh:focusNode ex:person3 ;
          sh:resultPath ex:skills ;
          sh:resultSeverity sh:Violation ;
          sh:sourceConstraintComponent sh:MinListLengthConstraintComponent ;
          sh:sourceShape ex:PersonShape-skills ;
          sh:value ex:notAList ;
        ] ;
    ] ;
  mf:status sht:approved ;
.
